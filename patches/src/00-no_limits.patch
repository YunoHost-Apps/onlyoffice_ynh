diff --git a/Common/sources/constants.js b/Common/sources/constants.js
index 4fc0d807..cd504b73 100644
--- a/Common/sources/constants.js
+++ b/Common/sources/constants.js
@@ -87,8 +87,8 @@ exports.LICENSE_RESULT = {
   NotBefore: 16
 };
 
-exports.LICENSE_CONNECTIONS = 20;
-exports.LICENSE_USERS = 3;
+exports.LICENSE_CONNECTIONS = 9999;
+exports.LICENSE_USERS = 200;
 exports.LICENSE_EXPIRE_USERS_ONE_DAY = 24 * 60 * 60; // day in seconds
 
 exports.AVS_OFFICESTUDIO_FILE_UNKNOWN =  0x0000;
diff --git a/Common/sources/license.js b/Common/sources/license.js
index d43ee210..c0f63d4b 100644
--- a/Common/sources/license.js
+++ b/Common/sources/license.js
@@ -44,22 +44,23 @@ exports.readLicense = async function () {
 	return [{
 		count: 1,
 		type: c_LR.Success,
-		packageType: constants.PACKAGE_TYPE_OS,
+		packageType: constants.PACKAGE_TYPE_I,
 		mode: constants.LICENSE_MODE.None,
-		branding: false,
+		branding: true,
 		connections: constants.LICENSE_CONNECTIONS,
 		connectionsView: constants.LICENSE_CONNECTIONS,
-		customization: false,
-		advancedApi: false,
-		usersCount: 0,
-		usersViewCount: 0,
+		customization: true,
+		advancedApi: true,
+		usersCount: constants.LICENSE_CONNECTIONS,
+		usersViewCount: constants.LICENSE_CONNECTIONS,
 		usersExpire: constants.LICENSE_EXPIRE_USERS_ONE_DAY,
-		hasLicense: false,
+		hasLicense: true,
+		plugins: true,
 		buildDate: oBuildDate,
 		startDate: startDate,
-		endDate: null,
+		endDate: new Date("2099-01-01T23:59:59.000Z"),
 		customerId: "",
-		alias: "",
+		alias: "community",
 		multitenancy: false
 	}, null];
 };
diff --git a/Common/sources/tenantManager.js b/Common/sources/tenantManager.js
index 703c81d2..898296be 100644
--- a/Common/sources/tenantManager.js
+++ b/Common/sources/tenantManager.js
@@ -261,10 +261,11 @@ async function getTenantLicense(ctx) {
       }
       res = licenseTupleTenant;
     } else {
-      res = [...res];
-      res[0] = {...res[0]};
-      res.type = constants.LICENSE_RESULT.Error;
-      ctx.logger.error('getTenantLicense error: missing "multitenancy" or "alias" field');
+      // This might need to be changed
+      // xbeeant chose to always return a static object, it might break in multitenant mode ?
+      // Maybe you can use the generation to retrieve the one defined in license.js [res] = yield* license.readLicense(licensePath);
+      // Or it might work just like that.
+      res = licenseInfo;
     }
   }
   return res;
diff --git a/DocService/sources/server.js b/DocService/sources/server.js
index 150dca50..3b40b35e 100644
--- a/DocService/sources/server.js
+++ b/DocService/sources/server.js
@@ -124,8 +124,6 @@ if (!(cfgTokenEnableBrowser && cfgTokenEnableRequestInbox && cfgTokenEnableReque
 }
 
 updateLicense();
-fs.watchFile(cfgLicenseFile, updateLicense);
-setInterval(updateLicense, 86400000);
 
 try {
 	let staticContent = config.get('services.CoAuthoring.server.static_content');
diff --git a/FileConverter/sources/convertermaster.js b/FileConverter/sources/convertermaster.js
index 2209e8c9..37e71847 100644
--- a/FileConverter/sources/convertermaster.js
+++ b/FileConverter/sources/convertermaster.js
@@ -89,9 +89,6 @@ if (cluster.isMaster) {
   });
 
   updateLicense();
-
-  fs.watchFile(cfgLicenseFile, updateLicense);
-  setInterval(updateLicense, 86400000);
 } else {
   const converter = require('./converter');
   converter.run();
diff --git a/Makefile b/Makefile
index e8e1308f..23f7e2ef 100644
--- a/Makefile
+++ b/Makefile
@@ -87,7 +87,7 @@ DEBUG = $(BRANDING_DIR)/debug.js
 .PHONY: all clean install uninstall build-date
 
 .NOTPARALLEL:
-all: $(SPELLCHECKER_DICTIONARIES) $(TOOLS) $(SCHEMA) $(CORE_FONTS) $(DOCUMENT_TEMPLATES) $(LICENSE) $(WELCOME) $(INFO) build-date
+all: $(SCHEMA) $(LICENSE) $(WELCOME) $(INFO) build-date
 
 build-date: $(GRUNT_FILES)
 	sed "s|\(const buildVersion = \).*|\1'${PRODUCT_VERSION}';|" -i $(COMMON_DEFINES_JS)
