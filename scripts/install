#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

jwt_secret=$(ynh_string_random --length=32)
ynh_app_setting_set --app="$app" --key=jwt_secret --value="$jwt_secret"

cache_tag=$(date +'%Y.%m.%d-%H%M' | openssl md5 | awk '{print $2}')
ynh_app_setting_set --app="$app" --key=cache_tag --value="$cache_tag"

secure_link_secret=$(ynh_string_random)
ynh_app_setting_set --app="$app" --key=secure_link_secret --value="$secure_link_secret"




#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

conf_dir="$install_dir/config"
mkdir -p "$install_dir/Data"
mkdir -p "/var/log/$app/"
ynh_setup_source --dest_dir="$install_dir/deb"
pushd "$install_dir/deb"
ar vx "$install_dir/deb/onlyoffice-documentserver.deb"

# We use the .deb cause tar.xz doesn't contains submodules and management scripts
tar xf "$install_dir/deb/data.tar.xz"
mv "$install_dir/deb/etc/onlyoffice/documentserver" "$conf_dir"
mv "$install_dir/deb/var/www/onlyoffice/documentserver" "$install_dir/documentserver"
mv "$install_dir/deb/usr/bin" "$install_dir/bin"
mkdir -p "$install_dir/documentserver/fonts"
popd
ynh_safe_rm "$install_dir/deb"

# We use sources in order to recompile binary
ynh_setup_source --source_id="src"  --dest_dir="$install_dir/src"
ynh_replace --match="const buildVersion = " --replace="const buildVersion = '${YNH_APP_MANIFEST_VERSION%%~*}';" --file="$install_dir/src/Common/sources/commondefines.js"
buildNumber=$(ynh_read_manifest "resources.sources.src.url"| sed "s/\.tar\.gz//" | grep -Eo "[0-9]+$")
ynh_replace --match="const buildNumber = " --replace="const buildNumber = $buildNumber;" --file="$install_dir/src/Common/sources/commondefines.js"
ynh_replace --match="const buildDate = " --replace="const buildDate = '$( date +%F )';" --file="$install_dir/src/Common/sources/license.js"

chown -R "$app:$app" "$install_dir"
chown "$app:www-data" "$install_dir"
chown "$app:www-data" "$install_dir/documentserver"
chmod go=--- "$install_dir/"{src,bin,config,Data}
chmod o=--- "$install_dir/documentserver"
chmod a-w "$install_dir/documentserver"
ynh_setup_source --source_id="fonts" --dest_dir="/usr/share/fonts/custom/" 

#=================================================
# COMPILE ONLYOFFICE
#=================================================
ynh_script_progression "Compiling $app..."
ynh_hide_warnings npm install -g @yao-pkg/pkg
pushd "$install_dir/src"
ynh_hide_warnings npm ci
ynh_hide_warnings npm run build

ynh_hide_warnings pkg DocService --options max_old_space_size=4096 -o $install_dir/documentserver/server/DocService/docservice
ynh_hide_warnings pkg FileConverter -o $install_dir/documentserver/server/FileConverter/converter
ynh_hide_warnings pkg Metrics -o $install_dir/documentserver/server/Metrics/metrics
popd

# Activate smartphone editor
sed -i 's/isSupportEditFeature=()=>!1/isSupportEditFeature=()=>!0/g' $install_dir/documentserver/web-apps/apps/*/mobile/dist/js/app.js

#=================================================
# SETUP RABBIT MQ VHOST
#=================================================
ynh_script_progression "Configuring rabbitmq vhost $app..."

ynh_rabbitmq_setup_vhost

#=================================================
# SETUP REDIS DB
#=================================================
ynh_script_progression "Configuring redis db..."

redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --app="$app" --key=redis_db --value="$redis_db"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template="local.json" --destination="$conf_dir/local.json"
chmod 400 "$conf_dir/local.json"
chown "$app:$app" "$conf_dir/local.json"

ynh_replace --match="/var/www/onlyoffice/" --replace="$install_dir/" --file="$conf_dir/production-linux.json"
ynh_replace --match="/etc/onlyoffice/documentserver/" --replace="$install_dir/config/" --file="$conf_dir/production-linux.json"
ynh_replace --match="/var/lib/onlyoffice/documentserver/App_Data/" --replace="$data_dir/" --file="$conf_dir/production-linux.json"
ynh_store_file_checksum "$conf_dir/production-linux.json"
# TODO: rejectUnauthorized: false was set but i think it's a bad security behaviour

# Hack for documentserver script
for script in $(ls "$install_dir/bin/")
do
    ynh_replace --match="/var/www/onlyoffice/" --replace="$install_dir/" --file="$install_dir/bin/$script"
    ynh_replace --match="/etc/onlyoffice/documentserver" --replace="$conf_dir" --file="$install_dir/bin/$script"
    ynh_replace --match="ds:ds" --replace="$app:$app" --file="$install_dir/bin/$script"
    ynh_replace --match="ds-docservice" --replace="$app-docservice" --file="$install_dir/bin/$script"
    ynh_replace --match="ds-converter" --replace="$app-converter" --file="$install_dir/bin/$script"
done
ynh_replace --match="localhost:8000" --replace="localhost:$port" --file="$install_dir/bin/documentserver-prepare4shutdown.sh"

ynh_replace --match=".*/etc/nginx/includes/ds-cache.conf.*" --replace='sed "/set $cache_tag /s/.*/set \$cache_tag \"$HASH\";/" /etc/nginx/conf.d/'$domain'.d/'$app'.conf' --file="$install_dir/bin/documentserver-prepare4shutdown.sh"

ynh_safe_rm "$conf_dir/nginx/ds.conf"
ln -s /etc/nginx/conf.d/$domain.d/$app.conf "$conf_dir/nginx/ds.conf"
ynh_safe_rm "$conf_dir/nginx/includes/ds-docservice.conf"
ln -s /etc/nginx/conf.d/$domain.d/$app.conf "$conf_dir/nginx/includes/ds-docservice.conf"

$install_dir/bin/documentserver-flush-cache.sh

#=================================================
# SETUP DATABASE
#=================================================
ynh_script_progression "Populating postgresql database $app..."
db_dump="$install_dir/documentserver/server/schema/postgresql/createdb.sql"
echo "alter table doc_changes owner to $app;" >> $db_dump
echo "alter table task_result owner to $app;" >> $db_dump
ynh_psql_db_shell $app < "$install_dir/documentserver/server/schema/postgresql/createdb.sql"


#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd --service="$app"
yunohost service add "$app" --description="$app"
for service in "converter" "docservice" "metrics"; do
    ynh_config_add_systemd --service="$app-$service" --template="$service.service"
    yunohost service add "$app-$service" --description="$app $service" --log="/var/log/$app/$service.log"
done
chown -R "$app:$app" "/var/log/$app/"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# REGENERATE FONTS
#=================================================
ynh_script_progression "Generating fonts..."
PATH="$install_dir/bin/:$PATH"
pushd $install_dir/bin/
ynh_hide_warnings ./documentserver-generate-allfonts.sh
popd

#=================================================
# ADD CRON
#=================================================
ynh_script_progression "Adding cron..."
# This is not in official setup but it could help to avoid overload and lost data
# It runs a restart which triggers document-prepare4shutdown.sh script (in ExecStop) so all documents are force saved and all clients disconnected.
# Note: may be the autoAssembly config is enough, and that's not necessary anymore.
echo "45  3  *  *  * root /usr/bin/systemctl try-restart onlyoffice" > /etc/cron.d/$app

#=================================================
# START SERVICES
#=================================================

ynh_systemctl --action=start --service="$app" 

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
